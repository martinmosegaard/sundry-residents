[alias]
	# Logging
	slog = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=short --decorate
	sl = log --graph --oneline --pretty

	## The Phlow >>
	  addremove = add -A .
	  work-on	= "!f() { \
	    BRANCHNAME=`git issue-branch $1`; \
			DELIVEREDBRANCHNAME=delivered/$BRANCHNAME; \
			if [[ `git branch --list $DELIVEREDBRANCHNAME` =~ $DELIVEREDBRANCHNAME ]]; \
			then \
	  		git branch -m $DELIVEREDBRANCHNAME $BRANCHNAME; \
		  	git checkout $BRANCHNAME; \
			else \
		  	git checkout $BRANCHNAME   2> /dev/null; \
				git fetch origin \
			  && git checkout -b $BRANCHNAME origin/`git default-branch`; \
			fi; \
			if [[ `git status` =~ "fast-forwarded" ]]; \
			then \
				git pull; \
			fi; \
			git issue-wip $1; \
	  }; f"
	  issue-branch = "!f() { \
	    MATCH=[#â†‘]$1:; \
	    ghi show $1 2>/dev/null \
	    | grep $MATCH \
	    | sed   s/$MATCH/$1/g \
	    | sed 's/ /-/g' \
	    | sed s/[:\\'\\/\\\"\\?]//g; \
	  }; f"
	  default-branch = "!f() { \
	    curl -s -u :`git get-ghi-token` 'https://api.github.com/repos/'`git hub-name` \
	    | grep 'default_branch' \
	    | cut -d ':' -f2 \
	    |  sed s/[\\ ,\\\"]//g; \
	  }; f"
	  hub-name =  "!f() { \
	    git config --get remote.origin.url \
	    | cut -d ':' -f2 \
	    | sed s@//github.com/@@g \
	    | sed s/.git$//g; \
	  }; f"
	  issue-wip = "!f() { \
			if [[ $1 =~ ^[[:digit:]]+$ ]]; \
			then  \
	  		ghi assign $1 > /dev/null; \
	      ghi label $1 'Status - in progress' > /dev/null; \
	  		ghi open $1; \
			fi; \
	  }; f"
	  issue-nwip = "!f() { \
	    if [[ $1 =~ ^[[:digit:]]+$ ]]; \
	    then  \
	      ghi label $1 -d 'Status - in progress'; \
	    fi; \
	  }; f"
	  wrapup = "!f() { \
	    MSG='close #'`git symbolic-ref --short HEAD | sed 's/-/ /g'`; \
	    echo $MSG > ~/WRAPUP_EDITMSG; \
	    git addremove; \
	    git commit -F ~/WRAPUP_EDITMSG; \
	    rm ~/WRAPUP_EDITMSG; \
	  }; f"
	  issue-no-from-branch = "!f(){ \
	    BRANCH=`git symbolic-ref --short HEAD`; \
	    if [[ $BRANCH =~ ^([[:digit:]]+) || $BRANCH =~ ^delivered/([[:digit:]]+) ]]; \
	    then \
	      echo ${BASH_REMATCH[1]}; \
	    fi; \
	  }; f"
	  deliver = "!f() { \
	    BRANCH=`git symbolic-ref --short HEAD`; \
	    if [[ $BRANCH =~ ^delivered/ || $BRANCH == `git default-branch` ]]; \
	    then \
	      echo 'Come on! - You can't deliver this branch!; \
	    else \
	      git push origin $BRANCH:ready/$BRANCH \
	      && git branch -m delivered/$BRANCH \
				&& git issue-nwip `git issue-no-from-branch`; \
	    fi; \
	  }; f"
	  local-deliver = "!f() { \
	    BRANCH=`git symbolic-ref --short HEAD`; \
	    if [[ $BRANCH =~ ^delivered/ || $BRANCH == `git default-branch` ]]; \
	    then \
	      echo 'Come on! - You can't deliver this branch!; \
	    else \
			  git pull --rebase \
			  && git checkout `git default-branch` \
				&& git pull \
				&& git merge $BRANCH \
	      && git branch -m $BRANCH delivered/$BRANCH \
				&& git push \
				&& git issue-nwip `git issue-no-from-branch`; \
	    fi; \
	  }; f"
	  purge-all-delivered = "!f() { \
	    git checkout `git default-branch`; \
	    git branch | grep 'delivered/' \
	    | sed 's/delivered\\///g' \
	    | xargs -I %br sh -c 'git branch -D delivered/%br; \
	    git push origin :%br' 2>/dev/null; \
	    git fetch --prune; \
	  }; f "
	  get-ghi-token = "!f(){ \
		 TOKEN=`git config --global --get ghi.token`; \
		 if [[ $TOKEN =~ ^! ]];\
		 then \
			 eval `echo $TOKEN | sed 's/^!//'`; \
		 else \
		   echo $TOKEN; \
		 fi;\
		}; f"
	## << The Phlow

## Happy Git environment - https://gist.github.com/trey/2722934
[color]
	branch = auto
	diff = auto
	status = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
